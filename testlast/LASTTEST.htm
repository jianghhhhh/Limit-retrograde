<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [E:\ARM QRS\testlast\LASTTEST.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image E:\ARM QRS\testlast\LASTTEST.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Sat Dec 31 15:56:04 2016
<BR><P>
<H3>Maximum Stack Usage =        200 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
RectangularButtonMsgProc &rArr; RectangularButtonPaint &rArr; GrImageDraw
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[7]">Reset_Handler</a>
 <LI><a href="#[8]">NmiSR</a>
 <LI><a href="#[9]">FaultISR</a>
 <LI><a href="#[a]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1a]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">SysCtlDelay</a><BR>
 <LI><a href="#[8]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">NmiSR</a><BR>
 <LI><a href="#[9]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">FaultISR</a><BR>
 <LI><a href="#[a]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3]">CanvasMsgProc</a> from canvas.o(i.CanvasMsgProc) referenced 20 times from main.o(.data)
 <LI><a href="#[9]">FaultISR</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[a]">IntDefaultHandler</a> from startup.o(RESET) referenced 120 times from startup.o(RESET)
 <LI><a href="#[15]">Kitronix240x320x16_SD60154ColorTranslate</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[16]">Kitronix240x320x16_SD60154Flush</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[12]">Kitronix240x320x16_SD60154LineDrawH</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[13]">Kitronix240x320x16_SD60154LineDrawV</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[10]">Kitronix240x320x16_SD60154PixelDraw</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[11]">Kitronix240x320x16_SD60154PixelDrawMultiple</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[14]">Kitronix240x320x16_SD60154RectFill</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.constdata)
 <LI><a href="#[8]">NmiSR</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[1]">OnButtonPress1</a> from main.o(.text) referenced 4 times from main.o(.data)
 <LI><a href="#[2]">OnButtonPress2</a> from main.o(.text) referenced 4 times from main.o(.data)
 <LI><a href="#[0]">RectangularButtonMsgProc</a> from pushbutton.o(i.RectangularButtonMsgProc) referenced 4 times from main.o(.data)
 <LI><a href="#[7]">Reset_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[b]">TouchScreenIntHandler</a> from touch.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[6]">WidgetDefaultMsgProc</a> from widget.o(i.WidgetDefaultMsgProc) referenced 2 times from widget.o(.data)
 <LI><a href="#[d]">WidgetPointerMessage</a> from widget.o(i.WidgetPointerMessage) referenced from main.o(.text)
 <LI><a href="#[f]">WriteCommandEPI</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.text)
 <LI><a href="#[5]">WriteCommandGPIO</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced 2 times from kitronix320x240x16_ssd2119_8bit.o(.data)
 <LI><a href="#[e]">WriteDataEPI</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced from kitronix320x240x16_ssd2119_8bit.o(.text)
 <LI><a href="#[4]">WriteDataGPIO</a> from kitronix320x240x16_ssd2119_8bit.o(.text) referenced 2 times from kitronix320x240x16_ssd2119_8bit.o(.data)
 <LI><a href="#[c]">main</a> from main.o(.text) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[63]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[18]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[55]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[64]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[65]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[1a]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSRAMDaughterLCDInterface
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGPIOLCDInterface
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kitronix320x240x16_SSD2119Init
</UL>

<P><STRONG><a name="[61]"></a>WidgetMutexGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, widget.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>

<P><STRONG><a name="[66]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[5f]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[67]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[1]"></a>OnButtonPress1</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OnButtonPress1 &rArr; WidgetMessageQueueProcess &rArr; WidgetMessageSendPostOrder
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>OnButtonPress2</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OnButtonPress2 &rArr; WidgetMessageQueueProcess &rArr; WidgetMessageSendPostOrder
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>Delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN
</UL>

<P><STRONG><a name="[68]"></a>SpeedUP</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[1e]"></a>RUN</STRONG> (Thumb, 2904 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = RUN &rArr; WidgetMessageQueueProcess &rArr; WidgetMessageSendPostOrder
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickValueGet
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c]"></a>main</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = main &rArr; PinoutSet &rArr; EPIPinConfigSet &rArr; CalcEPIDivider &rArr; EPIDividerFromRate
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenCallbackSet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kitronix320x240x16_SSD2119Init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[26]"></a>Kitronix320x240x16_SSD2119Init</STRONG> (Thumb, 926 bytes, Stack size 16 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Kitronix320x240x16_SSD2119Init &rArr; InitSRAMDaughterLCDInterface &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSRAMDaughterLCDInterface
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGPIOLCDInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>PinoutSet</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = PinoutSet &rArr; EPIPinConfigSet &rArr; CalcEPIDivider &rArr; EPIDividerFromRate
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortControlSet
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaughterBoardTypeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>TouchScreenIntHandler</STRONG> (Thumb, 388 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchScreenIntHandler &rArr; TouchScreenDebouncer
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenDebouncer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TouchScreenInit</STRONG> (Thumb, 332 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchScreenInit &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerControlTrigger
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfigure
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceStepConfigure
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceEnable
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceConfigure
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntEnable
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCHardwareOversampleConfigure
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>TouchScreenCallbackSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN
</UL>

<P><STRONG><a name="[20]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN
</UL>

<P><STRONG><a name="[19]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[69]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>ADCHardwareOversampleConfigure</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADCHardwareOversampleConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[4f]"></a>ADCIntEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, adc.o(i.ADCIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[4c]"></a>ADCSequenceConfigure</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[4e]"></a>ADCSequenceEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceEnable))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[4d]"></a>ADCSequenceStepConfigure</STRONG> (Thumb, 110 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceStepConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceStepConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[3]"></a>CanvasMsgProc</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, canvas.o(i.CanvasMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = CanvasMsgProc &rArr; GrImageDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>EPIAddressMapSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, epi.o(i.EPIAddressMapSet))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[47]"></a>EPIConfigGPModeSet</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, epi.o(i.EPIConfigGPModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[46]"></a>EPIConfigHB8Set</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, epi.o(i.EPIConfigHB8Set))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[44]"></a>EPIConfigSDRAMSet</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, epi.o(i.EPIConfigSDRAMSet))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[41]"></a>EPIDividerSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, epi.o(i.EPIDividerSet))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[42]"></a>EPIModeSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, epi.o(i.EPIModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[40]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>

<P><STRONG><a name="[3f]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>

<P><STRONG><a name="[2c]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSRAMDaughterLCDInterface
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGPIOLCDInterface
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[3a]"></a>GPIOPinTypeI2C</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeI2C
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaughterBoardTypeGet
</UL>

<P><STRONG><a name="[2d]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSRAMDaughterLCDInterface
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGPIOLCDInterface
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[57]"></a>GrContextClipRegionSet</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, context.o(i.GrContextClipRegionSet))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[56]"></a>GrContextInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, context.o(i.GrContextInit))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[5a]"></a>GrImageDraw</STRONG> (Thumb, 724 bytes, Stack size 112 bytes, image.o(i.GrImageDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GrImageDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[5d]"></a>GrLineDrawH</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, line.o(i.GrLineDrawH))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
</UL>

<P><STRONG><a name="[5e]"></a>GrLineDrawV</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, line.o(i.GrLineDrawV))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrLineDrawV
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
</UL>

<P><STRONG><a name="[59]"></a>GrRectDraw</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, rectangle.o(i.GrRectDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GrRectDraw &rArr; GrLineDrawV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawV
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[58]"></a>GrRectFill</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, rectangle.o(i.GrRectFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrRectFill
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[5c]"></a>GrStringDraw</STRONG> (Thumb, 678 bytes, Stack size 88 bytes, string.o(i.GrStringDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GrStringDraw &rArr; GrLineDrawH
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[5b]"></a>GrStringWidthGet</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, string.o(i.GrStringWidthGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GrStringWidthGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[34]"></a>I2CMasterControl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterControl))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
</UL>

<P><STRONG><a name="[37]"></a>I2CMasterDataGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterDataGet))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
</UL>

<P><STRONG><a name="[33]"></a>I2CMasterDataPut</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterDataPut))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
</UL>

<P><STRONG><a name="[36]"></a>I2CMasterErr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterErr))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
</UL>

<P><STRONG><a name="[3b]"></a>I2CMasterInitExpClk</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterInitExpClk))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaughterBoardTypeGet
</UL>

<P><STRONG><a name="[31]"></a>I2CMasterIntClear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
</UL>

<P><STRONG><a name="[35]"></a>I2CMasterIntStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
</UL>

<P><STRONG><a name="[32]"></a>I2CMasterSlaveAddrSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(i.I2CMasterSlaveAddrSet))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
</UL>

<P><STRONG><a name="[50]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[25]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[0]"></a>RectangularButtonMsgProc</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, pushbutton.o(i.RectangularButtonMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = RectangularButtonMsgProc &rArr; RectangularButtonPaint &rArr; GrImageDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>SysCtlClockGet</STRONG> (Thumb, 436 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaughterBoardTypeGet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kitronix320x240x16_SSD2119Init
</UL>

<P><STRONG><a name="[23]"></a>SysCtlClockSet</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaughterBoardTypeGet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
</UL>

<P><STRONG><a name="[2a]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>SysTickValueGet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systick.o(i.SysTickValueGet))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN
</UL>

<P><STRONG><a name="[51]"></a>TimerConfigure</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, timer.o(i.TimerConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[53]"></a>TimerControlTrigger</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timer.o(i.TimerControlTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[54]"></a>TimerEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.TimerEnable))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[52]"></a>TimerLoadSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timer.o(i.TimerLoadSet))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[1b]"></a>WidgetAdd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, widget.o(i.WidgetAdd))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnButtonPress2
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnButtonPress1
</UL>

<P><STRONG><a name="[6]"></a>WidgetDefaultMsgProc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widget.o(i.WidgetDefaultMsgProc))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonMsgProc
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>WidgetMessageQueueAdd</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, widget.o(i.WidgetMessageQueueAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMutexGet
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetPointerMessage
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnButtonPress2
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnButtonPress1
</UL>

<P><STRONG><a name="[1d]"></a>WidgetMessageQueueProcess</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageQueueProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WidgetMessageQueueProcess &rArr; WidgetMessageSendPostOrder
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageSendPostOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnButtonPress2
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnButtonPress1
</UL>

<P><STRONG><a name="[62]"></a>WidgetMessageSendPostOrder</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, widget.o(i.WidgetMessageSendPostOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WidgetMessageSendPostOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
</UL>

<P><STRONG><a name="[d]"></a>WidgetPointerMessage</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, widget.o(i.WidgetPointerMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WidgetPointerMessage &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[6d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[6e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>WriteDataGPIO</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>WriteDataEPI</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>WriteCommandEPI</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>WriteCommandGPIO</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>InitGPIOLCDInterface</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InitGPIOLCDInterface &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kitronix320x240x16_SSD2119Init
</UL>

<P><STRONG><a name="[2e]"></a>InitSRAMDaughterLCDInterface</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InitSRAMDaughterLCDInterface &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kitronix320x240x16_SSD2119Init
</UL>

<P><STRONG><a name="[10]"></a>Kitronix240x320x16_SD60154PixelDraw</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Kitronix240x320x16_SD60154PixelDraw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[11]"></a>Kitronix240x320x16_SD60154PixelDrawMultiple</STRONG> (Thumb, 364 bytes, Stack size 40 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Kitronix240x320x16_SD60154PixelDrawMultiple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[12]"></a>Kitronix240x320x16_SD60154LineDrawH</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Kitronix240x320x16_SD60154LineDrawH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[13]"></a>Kitronix240x320x16_SD60154LineDrawV</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Kitronix240x320x16_SD60154LineDrawV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[14]"></a>Kitronix240x320x16_SD60154RectFill</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Kitronix240x320x16_SD60154RectFill
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[15]"></a>Kitronix240x320x16_SD60154ColorTranslate</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[16]"></a>Kitronix240x320x16_SD60154Flush</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kitronix320x240x16_ssd2119_8bit.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> kitronix320x240x16_ssd2119_8bit.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>EEPROMReadPolled</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EEPROMReadPolled
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterSlaveAddrSet
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterIntStatus
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterIntClear
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterErr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterDataPut
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterDataGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterControl
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaughterBoardTypeGet
</UL>

<P><STRONG><a name="[38]"></a>DaughterBoardTypeGet</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DaughterBoardTypeGet &rArr; EEPROMReadPolled
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMasterInitExpClk
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROMReadPolled
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
</UL>

<P><STRONG><a name="[3d]"></a>EPIDividerFromRate</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EPIDividerFromRate
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcEPIDivider
</UL>

<P><STRONG><a name="[3c]"></a>CalcEPIDivider</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CalcEPIDivider &rArr; EPIDividerFromRate
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIDividerFromRate
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[45]"></a>HB8ConfigGet</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HB8ConfigGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[43]"></a>SDRAMConfigGet</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDRAMConfigGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIPinConfigSet
</UL>

<P><STRONG><a name="[3e]"></a>EPIPinConfigSet</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = EPIPinConfigSet &rArr; CalcEPIDivider &rArr; EPIDividerFromRate
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIModeSet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIDividerSet
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIConfigSDRAMSet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIConfigHB8Set
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIConfigGPModeSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPIAddressMapSet
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMConfigGet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HB8ConfigGet
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcEPIDivider
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
</UL>

<P><STRONG><a name="[49]"></a>PortControlSet</STRONG> (Thumb, 240 bytes, Stack size 44 bytes, set_pinout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PortControlSet
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
</UL>

<P><STRONG><a name="[4a]"></a>TouchScreenDebouncer</STRONG> (Thumb, 436 bytes, Stack size 16 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchScreenDebouncer
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenIntHandler
</UL>

<P><STRONG><a name="[60]"></a>RectangularButtonPaint</STRONG> (Thumb, 398 bytes, Stack size 64 bytes, pushbutton.o(i.RectangularButtonPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = RectangularButtonPaint &rArr; GrImageDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonMsgProc
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
